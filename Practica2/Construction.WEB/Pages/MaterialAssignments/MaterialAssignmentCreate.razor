@page "/materialassignments/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


<h3>Material Assignments Create</h3>

<MaterialAssignmentForm @ref="materialAssignmentForm" MaterialAssignment="materialAssignment" OnSubmit="Create" ReturnAction="Return" />


@code {
    private MaterialAssignment materialAssignment = new();
    private MaterialAssignmentForm materialAssignmentForm;

    private async Task Create()
    {
        var responseHttp = await repository.Post("/api/materialassignments", materialAssignment);

        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessage();
            await sweetAlertService.FireAsync("Error", message);
            return;
        }
        Return();

        var Toast = sweetAlertService.Mixin(new SweetAlertOptions
            {

            Toast = true,
            Position = SweetAlertPosition.BottomEnd,
             ShowConfirmButton = true,
            Timer = 3000

            });

        await Toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con exito");

    }

    private void Return()
    {

        navigationManager.NavigateTo("/materialAssignments");

    }

}