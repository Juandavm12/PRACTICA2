// <auto-generated />
using System;
using Construction.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Construction.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240425010402_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Construction.Shared.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BudgetConstructionTeam")
                        .HasColumnType("float");

                    b.Property<double>("BudgetDutie")
                        .HasColumnType("float");

                    b.Property<double>("BudgetEquipment")
                        .HasColumnType("float");

                    b.Property<double>("BudgetProyectConstruction")
                        .HasColumnType("float");

                    b.Property<double>("BudgetTotal")
                        .HasColumnType("float");

                    b.Property<int?>("ProjectConstructionsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectConstructionsId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("Construction.Shared.Entities.ConstructionTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MembersList")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialties")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ConstructionTeams");
                });

            modelBuilder.Entity("Construction.Shared.Entities.Dutie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProjectConstructionsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectConstructionsId");

                    b.ToTable("Duties");
                });

            modelBuilder.Entity("Construction.Shared.Entities.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Capacity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DutiesId")
                        .HasColumnType("int");

                    b.Property<string>("MaintenanceState")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProjectConstructionsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DutiesId");

                    b.HasIndex("ProjectConstructionsId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("Construction.Shared.Entities.EquipmentAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConstructionTeamsId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectConstructionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConstructionTeamsId");

                    b.HasIndex("ProjectConstructionsId");

                    b.ToTable("EquipmentAssignments");
                });

            modelBuilder.Entity("Construction.Shared.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EstimatedDeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProjectConstructionsId")
                        .HasColumnType("int");

                    b.Property<double>("RequiredQuantity")
                        .HasColumnType("float");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectConstructionsId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Construction.Shared.Entities.MaterialAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DutiesId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DutiesId");

                    b.HasIndex("MaterialsId");

                    b.ToTable("MaterialAssignments");
                });

            modelBuilder.Entity("Construction.Shared.Entities.ProjectConstruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EstimatedEndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjectConstructions");
                });

            modelBuilder.Entity("Construction.Shared.Entities.Budget", b =>
                {
                    b.HasOne("Construction.Shared.Entities.ProjectConstruction", "ProjectConstructions")
                        .WithMany()
                        .HasForeignKey("ProjectConstructionsId");

                    b.Navigation("ProjectConstructions");
                });

            modelBuilder.Entity("Construction.Shared.Entities.Dutie", b =>
                {
                    b.HasOne("Construction.Shared.Entities.ProjectConstruction", "ProjectConstructions")
                        .WithMany()
                        .HasForeignKey("ProjectConstructionsId");

                    b.Navigation("ProjectConstructions");
                });

            modelBuilder.Entity("Construction.Shared.Entities.Equipment", b =>
                {
                    b.HasOne("Construction.Shared.Entities.Dutie", "Duties")
                        .WithMany()
                        .HasForeignKey("DutiesId");

                    b.HasOne("Construction.Shared.Entities.ProjectConstruction", "ProjectConstructions")
                        .WithMany()
                        .HasForeignKey("ProjectConstructionsId");

                    b.Navigation("Duties");

                    b.Navigation("ProjectConstructions");
                });

            modelBuilder.Entity("Construction.Shared.Entities.EquipmentAssignment", b =>
                {
                    b.HasOne("Construction.Shared.Entities.ConstructionTeam", "ConstructionTeams")
                        .WithMany("EquipmentAssignments")
                        .HasForeignKey("ConstructionTeamsId");

                    b.HasOne("Construction.Shared.Entities.ProjectConstruction", "ProjectConstructions")
                        .WithMany("EquipmentAssignments")
                        .HasForeignKey("ProjectConstructionsId");

                    b.Navigation("ConstructionTeams");

                    b.Navigation("ProjectConstructions");
                });

            modelBuilder.Entity("Construction.Shared.Entities.Material", b =>
                {
                    b.HasOne("Construction.Shared.Entities.ProjectConstruction", "ProjectConstructions")
                        .WithMany()
                        .HasForeignKey("ProjectConstructionsId");

                    b.Navigation("ProjectConstructions");
                });

            modelBuilder.Entity("Construction.Shared.Entities.MaterialAssignment", b =>
                {
                    b.HasOne("Construction.Shared.Entities.Dutie", "Duties")
                        .WithMany("MaterialAssignments")
                        .HasForeignKey("DutiesId");

                    b.HasOne("Construction.Shared.Entities.Material", "Materials")
                        .WithMany("MaterialAssignments")
                        .HasForeignKey("MaterialsId");

                    b.Navigation("Duties");

                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Construction.Shared.Entities.ConstructionTeam", b =>
                {
                    b.Navigation("EquipmentAssignments");
                });

            modelBuilder.Entity("Construction.Shared.Entities.Dutie", b =>
                {
                    b.Navigation("MaterialAssignments");
                });

            modelBuilder.Entity("Construction.Shared.Entities.Material", b =>
                {
                    b.Navigation("MaterialAssignments");
                });

            modelBuilder.Entity("Construction.Shared.Entities.ProjectConstruction", b =>
                {
                    b.Navigation("EquipmentAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
